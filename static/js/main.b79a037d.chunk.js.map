{"version":3,"sources":["models/index.js","stores/user.js","stores/auth.js","stores/image.js","stores/index.js","components/logo.svg","components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["AV","init","appId","appKey","serverURL","Auth","register","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginedUser","error","login","console","log","logIn","logout","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","_class","UserStore","_classCallCheck","_initializerDefineProperty","_descriptor","_createClass","key","value","this","currentUser","_applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","AuthStore","values","_this","pullUser","catch","err","resetUser","_this2","ImageStore","_descriptor2","_descriptor3","_descriptor4","newFilename","newFile","isUpoading","finally","context","createContext","window","stores","useStores","useContext","module","exports","Header","styled","header","_templateObject","_taggedTemplateLiteral","Logo","img","_templateObject2","StyledLink","NavLink","_templateObject3","Login","div","_templateObject4","StyledButton","Button","_templateObject5","Component","observer","history","useHistory","_useStores","useEffect","React","createElement","src","LogoUrl","to","activeClassName","exact","Fragment","attributes","type","onClick","push","Footer","footer","Loading","Home","lazy","History","About","Register","App","Suspense","fallback","Switch","Route","path","component","Boolean","location","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b79a037d.chunk.js","sourcesContent":["import AV, { Query, User } from 'leancloud-storage';\n\nAV.init({\n  appId: \"UqBaAsQMqOQB3rLwNGLTKtOF-gzGzoHsz\",\n  appKey: \"uv9EyQmkgX7UjUt4TeVUBhVa\",\n  serverURL: \"https://uqbaasqm.lc-cn-n1-shared.com\"\n});\n\nconst Auth = {\n  register(username, password) {\n    let user = new User();\n    user.setUsername(username);\n    user.setPassword(password);\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\n    });\n  },\n\n  login(username, password) {\n    console.log('------')\n    console.log(username, password)\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\n    });\n  },\n\n  logout() {\n    User.logOut();\n  },\n\n  getCurrentUser() {\n    return User.current();\n  }\n\n};\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image');\n    const avFile = new AV.File(filename, file);\n    item.set('filename', filename);\n    item.set('owner', AV.User.current());\n    item.set('url', avFile);\n    return new Promise((resolve, reject) => {\n      item.save().then(serverFile => resolve(serverFile), error => reject(error));\n    });\n  }\n}\n\n\n\n\n\n\nexport {\n  Auth,\n  Uploader\n};","import { observable, action } from 'mobx';\nimport { Auth } from '../models';\n\nclass UserStore {\n  @observable currentUser = null;\n\n  @action pullUser() {\n    this.currentUser = Auth.getCurrentUser()\n  }\n\n  @action resetUser() {\n    this.currentUser = null;\n  }\n}\n\n\nexport default new UserStore() ;\n","import { observable, action } from 'mobx';\nimport { Auth } from '../models';\nimport UserStore from './user';\n\nclass AuthStore {\n  @observable values = {\n    username: '',\n    password: ''\n  };\n\n  @action setUsername(username) {\n    this.values.username = username;\n  }\n\n  @action setPassword(password) {\n    this.values.password = password;\n  }\n\n  @action login() {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n      .then(user => {\n        UserStore.pullUser();\n        resolve(user);\n      }).catch(err => {\n        UserStore.resetUser();\n        reject(err);\n      })\n    });\n  }\n\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n      .then(user => {\n        UserStore.pullUser();\n        resolve(user);\n      }).catch(err => {\n        UserStore.resetUser();\n        reject(err);\n      })\n    });  \n  }\n\n  @action logout() {\n    Auth.logout();\n    UserStore.resetUser();\n  }\n\n}\n\n\nexport default new AuthStore();\n","import { observable, action } from 'mobx';\nimport { Uploader } from '../models';\n\nclass ImageStore {\n  @observable filename = \"\";\n  @observable file = null;\n  @observable isUpoading = false;\n  @observable serverFile = null;\n\n  @action setFilename(newFilename) {\n    this.filename = newFilename;\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile;\n  }\n\n  @action upload() {\n    this.isUpoading = true;\n    return new Promise((resolve, reject) => {\n      Uploader.add(this.file, this.filename)\n      .then(serverFile => {\n        this.serverFile = serverFile;\n        resolve(serverFile);\n      }).catch(err => {\n        console.error('上传失败');\n        reject(err);\n      }).finally(() => {\n        this.isUpoading = false;\n      });\n    })\n      \n  }\n\n\n}\n\n\nexport default new ImageStore();\n","import React, { createContext, useContext } from 'react';\nimport AuthStore from './auth';\nimport UserStore from './user';\nimport ImageStore from './image';\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore\n});\n\nwindow.stores = {\n  AuthStore,\n  UserStore,\n  ImageStore\n};\n\nexport const useStores = () => useContext(context);","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport LogoUrl from './logo.svg';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport { useStores } from '../stores';\nimport { observer } from 'mobx-react';\n\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 10px 100px;\n  background-color: #02101f;\n  color: #fff;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: #fff;\n  margin-left: 30px;\n\n  &.active {\n    border-bottom: 1px solid #fff;\n  }\n`;\n\nconst Login = styled.div`\n  margin-left: auto;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px;\n`;\n\n\nconst  Component = observer(() => {\n\n  const history = useHistory();\n  const { UserStore, AuthStore } = useStores();\n\n  const handleLogout = () => {\n    AuthStore.logout();\n  };\n\n  const handleLogin = () => {\n    console.log('跳转到登录页面')\n    history.push('/login');\n  };\n\n  const handleRegister = () => {\n    console.log('跳转到注册页面')\n    history.push('/register');\n  }\n\n  useEffect(()=>{\n    UserStore.pullUser();\n  },[])\n\n  return (\n    <Header>\n      <Logo src={LogoUrl} />\n      <nav>\n        <StyledLink to=\"/\" activeClassName=\"active\" exact>首页</StyledLink>\n        <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\n        <StyledLink to=\"/about\" activeClassName=\"active\">关于我</StyledLink>\n      </nav>\n      <Login>\n        {\n          UserStore.currentUser ? <>\n            {UserStore.currentUser.attributes.username} <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\n          </> :<>\n          <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\n          <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\n          </>\n\n        }\n      </Login>\n\n    </Header>\n  );\n});\n\nexport default Component;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Footer = styled.footer`\n  padding: 10px 100px;\n  text-align: center;\n  font-size: 12px;\n  color: #aaa;\n`;\n\nfunction Component() {\n  return (\n    <Footer>\n      <p>Footer</p>\n    </Footer>\n  );\n}\n\nexport default Component;","import React from 'react';\n\nexport default function Loading() {\n  return (\n    <div>Loading...</div>\n  );\n}\n\n","import React, { Suspense, lazy } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Loading from './components/Loading';\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\n\nconsole.log(Loading)\n// import Home from './pages/Home';\n// import History from './pages/History';\n// import About from './pages/About';\n\nconst Home = lazy(() => import('./pages/Home'));\nconst History = lazy(() => import('./pages/History'));\nconst About = lazy(() => import('./pages/About'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\n\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport Model from './models';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}