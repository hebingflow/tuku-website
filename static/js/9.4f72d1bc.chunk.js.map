{"version":3,"sources":["pages/Login.js"],"names":["Wraper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","React","createElement","Form","Object","assign","name","onFinish","values","console","log","setUsername","username","setPassword","password","login","then","push","catch","e","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","Input","min","max","Password","Button","type","htmlType"],"mappings":"oNAOMA,EAASC,IAAOC,IAAGC,MAAAC,YAAA,+IAQnBC,EAAQJ,IAAOK,GAAEC,MAAAH,YAAA,yDAMjBI,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KA6FKI,UAzFG,WAEhB,IAAQC,EAAcC,cAAdD,UACFE,EAAUC,cA6BhB,OACEC,IAAAC,cAACpB,EAAM,KACPmB,IAAAC,cAACf,EAAK,KAAC,gBACPc,IAAAC,cAACC,IAAIC,OAAAC,OAAA,GACCf,EAAM,CACVgB,KAAK,QACLC,SAjCa,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBX,EAAUc,YAAYH,EAAOI,UAC7Bf,EAAUgB,YAAYL,EAAOM,UAC7BjB,EAAUkB,QACPC,MAAK,WACJP,QAAQC,IAAI,2DACZX,EAAQkB,KAAK,QACZC,OAAM,SAACC,GACRV,QAAQC,IAAIS,GACZV,QAAQC,IAAI,gCAwBdU,eApBmB,SAAAC,GACrBZ,QAAQC,IAAI,UAAWW,MAqBrBpB,IAAAC,cAACC,IAAKmB,KAAI,CACRC,MAAM,qBACNjB,KAAK,WACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACEC,UA3Be,SAACC,EAAMC,GAC9B,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,iDACzDD,QAAQG,cA4BXjC,IAAAC,cAACiC,IAAK,OAGRlC,IAAAC,cAACC,IAAKmB,KAAI,CACRC,MAAM,eACNjB,KAAK,WACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAEX,CACEU,IAAK,EACLV,QAAS,mCAEX,CACEW,IAAK,GACLX,QAAS,sCAIbzB,IAAAC,cAACiC,IAAMG,SAAQ,OAIjBrC,IAAAC,cAACC,IAAKmB,KAAS5B,EACbO,IAAAC,cAACqC,IAAM,CAACC,KAAK,UAAUC,SAAS,UAAS","file":"static/js/9.4f72d1bc.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport styled from 'styled-components';\nimport { useStores } from '../stores';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Wraper = styled.div`\n  max-width: 600px;\n  margin: 30px auto;\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 18,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 18,\n  },\n};\n\nconst Component = () => {\n\n  const { AuthStore } = useStores();\n  const history = useHistory();\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.login()\n      .then(() => {\n        console.log('登录成功,跳转到首页')\n        history.push('/');\n      }).catch((e)=>{\n        console.log(e)\n        console.log('登录失败')\n      })\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const validateUsername = (rule, value) => {\n    if(/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\n    if(value.length < 4 || value.length > 10) return Promise.reject('长度为4～10个字符');\n    return Promise.resolve();\n  };\n  \n\n\n\n  return (\n    <Wraper>\n    <Title>登录</Title>\n    <Form\n      {...layout}\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"用户名\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: '输入用户名',\n          },\n          {\n            validator: validateUsername\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"密码\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: '输入密码',\n          },\n          {\n            min: 4,\n            message: '最少4个字符'\n          }, \n          {\n            max: 10,\n            message: '最大10个字符'\n          }\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n    </Wraper>\n  );\n};\n\nexport default Component;"],"sourceRoot":""}